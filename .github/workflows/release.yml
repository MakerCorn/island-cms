name: Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-release-assets:
    name: Build Release Assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        os: [linux-x64, linux-arm64, win-x64, osx-x64, osx-arm64]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Publish
      run: |
        dotnet publish cms-mvc.csproj \
          --configuration Release \
          --runtime ${{ matrix.os }} \
          --self-contained true \
          --output ./publish/${{ matrix.os }} \
          /p:PublishSingleFile=true \
          /p:PublishTrimmed=true
          
    - name: Create Archive
      run: |
        cd ./publish/${{ matrix.os }}
        if [[ "${{ matrix.os }}" == "win-x64" ]]; then
          zip -r ../../island-cms-${{ github.event.release.tag_name }}-${{ matrix.os }}.zip .
        else
          tar -czf ../../island-cms-${{ github.event.release.tag_name }}-${{ matrix.os }}.tar.gz .
        fi
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./island-cms-${{ github.event.release.tag_name }}-${{ matrix.os }}.${{ matrix.os == 'win-x64' && 'zip' || 'tar.gz' }}
        asset_name: island-cms-${{ github.event.release.tag_name }}-${{ matrix.os }}.${{ matrix.os == 'win-x64' && 'zip' || 'tar.gz' }}
        asset_content_type: ${{ matrix.os == 'win-x64' && 'application/zip' || 'application/gzip' }}

  docker-release:
    name: Build and Push Release Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Create Docker Compose Release Asset
      run: |
        cat > docker-compose-release.yml << EOF
        version: '3.8'
        
        services:
          island-cms:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
            ports:
              - "8080:8080"
            environment:
              - ASPNETCORE_ENVIRONMENT=Production
              - PIRANHA_DBTYPE=file
              - PIRANHA_DBNAME=piranha.db
              - PIRANHA_DBPATH=/app/data/
              - PIRANHA_BASEPATH=/app/wwwroot/uploads
              - PIRANHA_BASEURL=~/uploads/
              - PIRANHA_MEDIASTORE=file
              - PIRANHA_SESSIONCACHE=false
              - PIRANHA_REDISCACHE=false
              - PIRANHA_HEALTHUI=true
            volumes:
              - cms_data:/app/data
              - cms_uploads:/app/wwwroot/uploads
            restart: unless-stopped
            healthcheck:
              test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
              interval: 30s
              timeout: 10s
              retries: 3
              start_period: 60s
        
        volumes:
          cms_data:
          cms_uploads:
        EOF
        
    - name: Upload Docker Compose Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./docker-compose-release.yml
        asset_name: docker-compose.yml
        asset_content_type: text/yaml
        
    - name: Extract changelog section for release
      id: changelog
      run: |
        # Extract changelog section for the current release
        VERSION="${{ github.event.release.tag_name }}"
        VERSION_NO_V="${VERSION#v}"
        
        # Extract the changelog section between the current version and the next version
        awk -v version="$VERSION_NO_V" '
        /^## \[/ {
          if (found_version) {
            exit
          }
          if ($0 ~ "\\[" version "\\]") {
            found_version = 1
            next
          }
        }
        found_version && !/^##/ {
          print
        }
        ' CHANGELOG.md > changelog_section.md
        
        # Read the changelog content and set as output
        echo 'changelog<<EOF' >> $GITHUB_OUTPUT
        cat changelog_section.md >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
        
    - name: Update release notes with changelog
      uses: actions/github-script@v7
      with:
        script: |
          const changelog = `${{ steps.changelog.outputs.changelog }}`;
          const currentBody = context.payload.release.body || '';
          
          let newBody;
          if (currentBody.trim()) {
            newBody = `${currentBody}\n\n## Changelog\n\n${changelog}`;
          } else {
            newBody = `## Changelog\n\n${changelog}`;
          }
          
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            body: newBody
          });